// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(TourContext))]
    partial class TourContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Traveler", b =>
                {
                    b.Property<int>("TravelerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TravelerId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<string>("TripId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TravelerId");

                    b.HasIndex("TripId");

                    b.ToTable("Traveler");

                    b.HasData(
                        new
                        {
                            TravelerId = 1,
                            Age = 20,
                            Email = "Ahmad@gmail.com",
                            Name = "Ahmad Yahya",
                            Seats = 2,
                            TripId = "B"
                        },
                        new
                        {
                            TravelerId = 2,
                            Age = 20,
                            Email = "Mohammad@gmail.com",
                            Name = "Mohammad Mansour",
                            Seats = 1,
                            TripId = "J"
                        },
                        new
                        {
                            TravelerId = 3,
                            Age = 20,
                            Email = "Dunia@gmail.com",
                            Name = "Dunia Abdeljabbar",
                            Seats = 3,
                            TripId = "C"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Trip", b =>
                {
                    b.Property<string>("TripId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Remaining_Seats")
                        .HasColumnType("int");

                    b.HasKey("TripId");

                    b.ToTable("Trip");

                    b.HasData(
                        new
                        {
                            TripId = "J",
                            Date = new DateTime(2023, 8, 2, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jerusalem",
                            Price = "600$",
                            Remaining_Seats = 2
                        },
                        new
                        {
                            TripId = "B",
                            Date = new DateTime(2023, 7, 2, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bethlehem",
                            Price = "500$",
                            Remaining_Seats = 10
                        },
                        new
                        {
                            TripId = "C",
                            Date = new DateTime(2023, 7, 15, 5, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jericho",
                            Price = "800$",
                            Remaining_Seats = 7
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.UserLogin", b =>
                {
                    b.Property<int>("UserLoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserLoginId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserLoginId");

                    b.ToTable("UserLogin");

                    b.HasData(
                        new
                        {
                            UserLoginId = 1,
                            Email = "Ahmad@123",
                            Password = "123"
                        },
                        new
                        {
                            UserLoginId = 2,
                            Email = "Mohammad@123",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Traveler", b =>
                {
                    b.HasOne("WebApplication1.Models.Trip", "Trips")
                        .WithMany()
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
